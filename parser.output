Terminals which are not used

   TK_PR_INPUT
   TK_PR_OUTPUT
   TK_PR_FOR
   TOKEN_ERRO


Rules never reduced

   24 primitive_types: TK_PR_INT
   25                | TK_PR_FLOAT
   26                | TK_PR_BOOL
   27                | TK_PR_CHAR
   28                | TK_PR_STRING


State 53 conflicts: 1 reduce/reduce
State 97 conflicts: 1 reduce/reduce
State 98 conflicts: 1 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 100 conflicts: 1 reduce/reduce
State 101 conflicts: 1 reduce/reduce
State 145 conflicts: 2 reduce/reduce
State 164 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declare_global_var program
    2        | declare_class program
    3        | declare_function program
    4        | /* empty */

    5 declare_global_var: storage_specifier_static declare_var ';'

    6 declare_var: var_type TK_IDENTIFICADOR
    7            | declare_array

    8 declare_array: var_type TK_IDENTIFICADOR '[' TK_LIT_INT ']'

    9 access_modifier: TK_PR_PROTECTED
   10                | TK_PR_PRIVATE
   11                | TK_PR_PUBLIC

   12 storage_specifier_static_const: TK_PR_STATIC
   13                               | TK_PR_CONST
   14                               | TK_PR_STATIC TK_PR_CONST

   15 storage_specifier_static: TK_PR_STATIC
   16                         | /* empty */

   17 storage_specifier_const: TK_PR_CONST
   18                        | /* empty */

   19 var_type: TK_PR_INT
   20         | TK_PR_FLOAT
   21         | TK_PR_BOOL
   22         | TK_PR_CHAR
   23         | TK_PR_STRING

   24 primitive_types: TK_PR_INT
   25                | TK_PR_FLOAT
   26                | TK_PR_BOOL
   27                | TK_PR_CHAR
   28                | TK_PR_STRING

   29 primitive_literals: TK_LIT_INT
   30                   | TK_LIT_FLOAT
   31                   | TK_LIT_FALSE
   32                   | TK_LIT_TRUE
   33                   | TK_LIT_CHAR
   34                   | TK_LIT_STRING

   35 logic_arithmetic_operators: logic_operators
   36                           | arithmetic_operators

   37 logic_operators: '<'
   38                | '>'
   39                | TK_OC_LE
   40                | TK_OC_GE
   41                | TK_OC_EQ
   42                | TK_OC_NE
   43                | TK_OC_AND
   44                | TK_OC_OR

   45 arithmetic_operators: '+'
   46                     | '-'
   47                     | '/'
   48                     | '*'

   49 declare_class: class_header class_body class_tail

   50 class_header: TK_PR_CLASS TK_IDENTIFICADOR '{'

   51 class_tail: '}' ';'

   52 class_body: class_property ':' class_body
   53           | class_property

   54 class_property: access_modifier var_type TK_IDENTIFICADOR
   55               | access_modifier var_type TK_IDENTIFICADOR '[' TK_LIT_INT ']'

   56 declare_function: function_header command_block

   57 function_header: storage_specifier_static var_type TK_IDENTIFICADOR '(' parameter_list ')'

   58 parameter_list: parameter ',' parameter_list
   59               | parameter
   60               | /* empty */

   61 parameter: storage_specifier_const var_type TK_IDENTIFICADOR

   62 command_block: '{' command_list '}'

   63 command_list: command command_list
   64             | command
   65             | /* empty */

   66 command: command_block
   67        | declare_local_var ';'
   68        | assignment ';'
   69        | control_flow ';'
   70        | function_invocation ';'
   71        | shift ';'
   72        | return

   73 declare_local_var: storage_specifier_static_const var_type TK_IDENTIFICADOR
   74                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR
   75                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR
   76                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE primitive_literals

   77 assignment: TK_IDENTIFICADOR '=' expression
   78           | TK_IDENTIFICADOR '[' expression ']' '=' expression
   79           | TK_IDENTIFICADOR '$' TK_IDENTIFICADOR '=' expression

   80 function_invocation: TK_IDENTIFICADOR '(' argument_list ')'

   81 argument_list: argument ',' argument_list
   82              | argument
   83              | /* empty */

   84 argument: expression
   85         | primitive_literals

   86 shift: TK_IDENTIFICADOR TK_OC_SL TK_LIT_INT
   87      | TK_IDENTIFICADOR TK_OC_SR TK_LIT_INT

   88 control_flow: if_then
   89             | if_then_else
   90             | switch
   91             | while
   92             | do_while
   93             | for_each

   94 if_then: TK_PR_IF '(' expression ')' TK_PR_THEN command_block

   95 if_then_else: if_then TK_PR_ELSE command_block

   96 switch: TK_PR_SWITCH '(' expression ')' command_block

   97 while: TK_PR_WHILE '(' expression ')' TK_PR_DO command_block

   98 do_while: TK_PR_DO command_block TK_PR_WHILE '(' expression ')'

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' expression_list ')' command_block

  100 expression_list: expression ',' expression_list
  101                | expression

  102 expression: TK_IDENTIFICADOR
  103           | TK_IDENTIFICADOR '[' expression ']'
  104           | primitive_literals
  105           | function_invocation
  106           | expression logic_arithmetic_operators expression
  107           | '(' expression ')'

  108 return: TK_PR_RETURN expression ';'
  109       | TK_PR_CASE TK_LIT_INT ':'
  110       | TK_PR_BREAK ';'
  111       | TK_PR_CONTINUE ';'


Terminals, with rules where they appear

$end (0) 0
'$' (36) 79
'(' (40) 57 80 94 96 97 98 99 107
')' (41) 57 80 94 96 97 98 99 107
'*' (42) 48
'+' (43) 45
',' (44) 58 81 100
'-' (45) 46
'/' (47) 47
':' (58) 52 99 109
';' (59) 5 51 67 68 69 70 71 108 110 111
'<' (60) 37
'=' (61) 77 78 79
'>' (62) 38
'[' (91) 8 55 78 103
']' (93) 8 55 78 103
'{' (123) 50 62
'}' (125) 51 62
error (256)
TK_PR_INT (258) 19 24
TK_PR_FLOAT (259) 20 25
TK_PR_BOOL (260) 21 26
TK_PR_CHAR (261) 22 27
TK_PR_STRING (262) 23 28
TK_PR_IF (263) 94
TK_PR_THEN (264) 94
TK_PR_ELSE (265) 95
TK_PR_WHILE (266) 97 98
TK_PR_DO (267) 97 98
TK_PR_INPUT (268)
TK_PR_OUTPUT (269)
TK_PR_RETURN (270) 108
TK_PR_CONST (271) 13 14 17
TK_PR_STATIC (272) 12 14 15
TK_PR_FOREACH (273) 99
TK_PR_FOR (274)
TK_PR_SWITCH (275) 96
TK_PR_CASE (276) 109
TK_PR_BREAK (277) 110
TK_PR_CONTINUE (278) 111
TK_PR_CLASS (279) 50
TK_PR_PRIVATE (280) 10
TK_PR_PUBLIC (281) 11
TK_PR_PROTECTED (282) 9
TK_OC_LE (283) 39 75 76
TK_OC_GE (284) 40
TK_OC_EQ (285) 41
TK_OC_NE (286) 42
TK_OC_AND (287) 43
TK_OC_OR (288) 44
TK_OC_SL (289) 86
TK_OC_SR (290) 87
TK_LIT_INT (291) 8 29 55 86 87 109
TK_LIT_FLOAT (292) 30
TK_LIT_FALSE (293) 31
TK_LIT_TRUE (294) 32
TK_LIT_CHAR (295) 33
TK_LIT_STRING (296) 34
TK_IDENTIFICADOR (297) 6 8 50 54 55 57 61 73 74 75 76 77 78 79 80 86
    87 99 102 103
TOKEN_ERRO (298)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1 2 3 4, on right: 0 1 2 3
declare_global_var (63)
    on left: 5, on right: 1
declare_var (64)
    on left: 6 7, on right: 5
declare_array (65)
    on left: 8, on right: 7
access_modifier (66)
    on left: 9 10 11, on right: 54 55
storage_specifier_static_const (67)
    on left: 12 13 14, on right: 73 74 75 76
storage_specifier_static (68)
    on left: 15 16, on right: 5 57
storage_specifier_const (69)
    on left: 17 18, on right: 61
var_type (70)
    on left: 19 20 21 22 23, on right: 6 8 54 55 57 61 73
primitive_types (71)
    on left: 24 25 26 27 28, on right: 74 75 76
primitive_literals (72)
    on left: 29 30 31 32 33 34, on right: 76 85 104
logic_arithmetic_operators (73)
    on left: 35 36, on right: 106
logic_operators (74)
    on left: 37 38 39 40 41 42 43 44, on right: 35
arithmetic_operators (75)
    on left: 45 46 47 48, on right: 36
declare_class (76)
    on left: 49, on right: 2
class_header (77)
    on left: 50, on right: 49
class_tail (78)
    on left: 51, on right: 49
class_body (79)
    on left: 52 53, on right: 49 52
class_property (80)
    on left: 54 55, on right: 52 53
declare_function (81)
    on left: 56, on right: 3
function_header (82)
    on left: 57, on right: 56
parameter_list (83)
    on left: 58 59 60, on right: 57 58
parameter (84)
    on left: 61, on right: 58 59
command_block (85)
    on left: 62, on right: 56 66 94 95 96 97 98 99
command_list (86)
    on left: 63 64 65, on right: 62 63
command (87)
    on left: 66 67 68 69 70 71 72, on right: 63 64
declare_local_var (88)
    on left: 73 74 75 76, on right: 67
assignment (89)
    on left: 77 78 79, on right: 68
function_invocation (90)
    on left: 80, on right: 70 105
argument_list (91)
    on left: 81 82 83, on right: 80 81
argument (92)
    on left: 84 85, on right: 81 82
shift (93)
    on left: 86 87, on right: 71
control_flow (94)
    on left: 88 89 90 91 92 93, on right: 69
if_then (95)
    on left: 94, on right: 88 95
if_then_else (96)
    on left: 95, on right: 89
switch (97)
    on left: 96, on right: 90
while (98)
    on left: 97, on right: 91
do_while (99)
    on left: 98, on right: 92
for_each (100)
    on left: 99, on right: 93
expression_list (101)
    on left: 100 101, on right: 99 100
expression (102)
    on left: 102 103 104 105 106 107, on right: 77 78 79 84 94 96 97
    98 100 101 103 106 107 108
return (103)
    on left: 108 109 110 111, on right: 72


state 0

    0 $accept: . program $end

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 4 (program)
    $default  reduce using rule 16 (storage_specifier_static)

    program                   go to state 3
    declare_global_var        go to state 4
    storage_specifier_static  go to state 5
    declare_class             go to state 6
    class_header              go to state 7
    declare_function          go to state 8
    function_header           go to state 9


state 1

   15 storage_specifier_static: TK_PR_STATIC .

    $default  reduce using rule 15 (storage_specifier_static)


state 2

   50 class_header: TK_PR_CLASS . TK_IDENTIFICADOR '{'

    TK_IDENTIFICADOR  shift, and go to state 10


state 3

    0 $accept: program . $end

    $end  shift, and go to state 11


state 4

    1 program: declare_global_var . program

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 4 (program)
    $default  reduce using rule 16 (storage_specifier_static)

    program                   go to state 12
    declare_global_var        go to state 4
    storage_specifier_static  go to state 5
    declare_class             go to state 6
    class_header              go to state 7
    declare_function          go to state 8
    function_header           go to state 9


state 5

    5 declare_global_var: storage_specifier_static . declare_var ';'
   57 function_header: storage_specifier_static . var_type TK_IDENTIFICADOR '(' parameter_list ')'

    TK_PR_INT     shift, and go to state 13
    TK_PR_FLOAT   shift, and go to state 14
    TK_PR_BOOL    shift, and go to state 15
    TK_PR_CHAR    shift, and go to state 16
    TK_PR_STRING  shift, and go to state 17

    declare_var    go to state 18
    declare_array  go to state 19
    var_type       go to state 20


state 6

    2 program: declare_class . program

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 4 (program)
    $default  reduce using rule 16 (storage_specifier_static)

    program                   go to state 21
    declare_global_var        go to state 4
    storage_specifier_static  go to state 5
    declare_class             go to state 6
    class_header              go to state 7
    declare_function          go to state 8
    function_header           go to state 9


state 7

   49 declare_class: class_header . class_body class_tail

    TK_PR_PRIVATE    shift, and go to state 22
    TK_PR_PUBLIC     shift, and go to state 23
    TK_PR_PROTECTED  shift, and go to state 24

    access_modifier  go to state 25
    class_body       go to state 26
    class_property   go to state 27


state 8

    3 program: declare_function . program

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 4 (program)
    $default  reduce using rule 16 (storage_specifier_static)

    program                   go to state 28
    declare_global_var        go to state 4
    storage_specifier_static  go to state 5
    declare_class             go to state 6
    class_header              go to state 7
    declare_function          go to state 8
    function_header           go to state 9


state 9

   56 declare_function: function_header . command_block

    '{'  shift, and go to state 29

    command_block  go to state 30


state 10

   50 class_header: TK_PR_CLASS TK_IDENTIFICADOR . '{'

    '{'  shift, and go to state 31


state 11

    0 $accept: program $end .

    $default  accept


state 12

    1 program: declare_global_var program .

    $default  reduce using rule 1 (program)


state 13

   19 var_type: TK_PR_INT .

    $default  reduce using rule 19 (var_type)


state 14

   20 var_type: TK_PR_FLOAT .

    $default  reduce using rule 20 (var_type)


state 15

   21 var_type: TK_PR_BOOL .

    $default  reduce using rule 21 (var_type)


state 16

   22 var_type: TK_PR_CHAR .

    $default  reduce using rule 22 (var_type)


state 17

   23 var_type: TK_PR_STRING .

    $default  reduce using rule 23 (var_type)


state 18

    5 declare_global_var: storage_specifier_static declare_var . ';'

    ';'  shift, and go to state 32


state 19

    7 declare_var: declare_array .

    $default  reduce using rule 7 (declare_var)


state 20

    6 declare_var: var_type . TK_IDENTIFICADOR
    8 declare_array: var_type . TK_IDENTIFICADOR '[' TK_LIT_INT ']'
   57 function_header: storage_specifier_static var_type . TK_IDENTIFICADOR '(' parameter_list ')'

    TK_IDENTIFICADOR  shift, and go to state 33


state 21

    2 program: declare_class program .

    $default  reduce using rule 2 (program)


state 22

   10 access_modifier: TK_PR_PRIVATE .

    $default  reduce using rule 10 (access_modifier)


state 23

   11 access_modifier: TK_PR_PUBLIC .

    $default  reduce using rule 11 (access_modifier)


state 24

    9 access_modifier: TK_PR_PROTECTED .

    $default  reduce using rule 9 (access_modifier)


state 25

   54 class_property: access_modifier . var_type TK_IDENTIFICADOR
   55               | access_modifier . var_type TK_IDENTIFICADOR '[' TK_LIT_INT ']'

    TK_PR_INT     shift, and go to state 13
    TK_PR_FLOAT   shift, and go to state 14
    TK_PR_BOOL    shift, and go to state 15
    TK_PR_CHAR    shift, and go to state 16
    TK_PR_STRING  shift, and go to state 17

    var_type  go to state 34


state 26

   49 declare_class: class_header class_body . class_tail

    '}'  shift, and go to state 35

    class_tail  go to state 36


state 27

   52 class_body: class_property . ':' class_body
   53           | class_property .

    ':'  shift, and go to state 37

    $default  reduce using rule 53 (class_body)


state 28

    3 program: declare_function program .

    $default  reduce using rule 3 (program)


state 29

   62 command_block: '{' . command_list '}'

    TK_PR_IF          shift, and go to state 38
    TK_PR_WHILE       shift, and go to state 39
    TK_PR_DO          shift, and go to state 40
    TK_PR_RETURN      shift, and go to state 41
    TK_PR_CONST       shift, and go to state 42
    TK_PR_STATIC      shift, and go to state 43
    TK_PR_FOREACH     shift, and go to state 44
    TK_PR_SWITCH      shift, and go to state 45
    TK_PR_CASE        shift, and go to state 46
    TK_PR_BREAK       shift, and go to state 47
    TK_PR_CONTINUE    shift, and go to state 48
    TK_IDENTIFICADOR  shift, and go to state 49
    '{'               shift, and go to state 29

    $default  reduce using rule 65 (command_list)

    storage_specifier_static_const  go to state 50
    command_block                   go to state 51
    command_list                    go to state 52
    command                         go to state 53
    declare_local_var               go to state 54
    assignment                      go to state 55
    function_invocation             go to state 56
    shift                           go to state 57
    control_flow                    go to state 58
    if_then                         go to state 59
    if_then_else                    go to state 60
    switch                          go to state 61
    while                           go to state 62
    do_while                        go to state 63
    for_each                        go to state 64
    return                          go to state 65


state 30

   56 declare_function: function_header command_block .

    $default  reduce using rule 56 (declare_function)


state 31

   50 class_header: TK_PR_CLASS TK_IDENTIFICADOR '{' .

    $default  reduce using rule 50 (class_header)


state 32

    5 declare_global_var: storage_specifier_static declare_var ';' .

    $default  reduce using rule 5 (declare_global_var)


state 33

    6 declare_var: var_type TK_IDENTIFICADOR .
    8 declare_array: var_type TK_IDENTIFICADOR . '[' TK_LIT_INT ']'
   57 function_header: storage_specifier_static var_type TK_IDENTIFICADOR . '(' parameter_list ')'

    '['  shift, and go to state 66
    '('  shift, and go to state 67

    $default  reduce using rule 6 (declare_var)


state 34

   54 class_property: access_modifier var_type . TK_IDENTIFICADOR
   55               | access_modifier var_type . TK_IDENTIFICADOR '[' TK_LIT_INT ']'

    TK_IDENTIFICADOR  shift, and go to state 68


state 35

   51 class_tail: '}' . ';'

    ';'  shift, and go to state 69


state 36

   49 declare_class: class_header class_body class_tail .

    $default  reduce using rule 49 (declare_class)


state 37

   52 class_body: class_property ':' . class_body

    TK_PR_PRIVATE    shift, and go to state 22
    TK_PR_PUBLIC     shift, and go to state 23
    TK_PR_PROTECTED  shift, and go to state 24

    access_modifier  go to state 25
    class_body       go to state 70
    class_property   go to state 27


state 38

   94 if_then: TK_PR_IF . '(' expression ')' TK_PR_THEN command_block

    '('  shift, and go to state 71


state 39

   97 while: TK_PR_WHILE . '(' expression ')' TK_PR_DO command_block

    '('  shift, and go to state 72


state 40

   98 do_while: TK_PR_DO . command_block TK_PR_WHILE '(' expression ')'

    '{'  shift, and go to state 29

    command_block  go to state 73


state 41

  108 return: TK_PR_RETURN . expression ';'

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 84


state 42

   13 storage_specifier_static_const: TK_PR_CONST .

    $default  reduce using rule 13 (storage_specifier_static_const)


state 43

   12 storage_specifier_static_const: TK_PR_STATIC .
   14                               | TK_PR_STATIC . TK_PR_CONST

    TK_PR_CONST  shift, and go to state 85

    $default  reduce using rule 12 (storage_specifier_static_const)


state 44

   99 for_each: TK_PR_FOREACH . '(' TK_IDENTIFICADOR ':' expression_list ')' command_block

    '('  shift, and go to state 86


state 45

   96 switch: TK_PR_SWITCH . '(' expression ')' command_block

    '('  shift, and go to state 87


state 46

  109 return: TK_PR_CASE . TK_LIT_INT ':'

    TK_LIT_INT  shift, and go to state 88


state 47

  110 return: TK_PR_BREAK . ';'

    ';'  shift, and go to state 89


state 48

  111 return: TK_PR_CONTINUE . ';'

    ';'  shift, and go to state 90


state 49

   77 assignment: TK_IDENTIFICADOR . '=' expression
   78           | TK_IDENTIFICADOR . '[' expression ']' '=' expression
   79           | TK_IDENTIFICADOR . '$' TK_IDENTIFICADOR '=' expression
   80 function_invocation: TK_IDENTIFICADOR . '(' argument_list ')'
   86 shift: TK_IDENTIFICADOR . TK_OC_SL TK_LIT_INT
   87      | TK_IDENTIFICADOR . TK_OC_SR TK_LIT_INT

    TK_OC_SL  shift, and go to state 91
    TK_OC_SR  shift, and go to state 92
    '['       shift, and go to state 93
    '('       shift, and go to state 94
    '='       shift, and go to state 95
    '$'       shift, and go to state 96


state 50

   73 declare_local_var: storage_specifier_static_const . var_type TK_IDENTIFICADOR
   74                  | storage_specifier_static_const . primitive_types TK_IDENTIFICADOR
   75                  | storage_specifier_static_const . primitive_types TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR
   76                  | storage_specifier_static_const . primitive_types TK_IDENTIFICADOR TK_OC_LE primitive_literals

    TK_PR_INT     shift, and go to state 97
    TK_PR_FLOAT   shift, and go to state 98
    TK_PR_BOOL    shift, and go to state 99
    TK_PR_CHAR    shift, and go to state 100
    TK_PR_STRING  shift, and go to state 101

    var_type         go to state 102
    primitive_types  go to state 103


state 51

   66 command: command_block .

    $default  reduce using rule 66 (command)


state 52

   62 command_block: '{' command_list . '}'

    '}'  shift, and go to state 104


state 53

   63 command_list: command . command_list
   64             | command .

    TK_PR_IF          shift, and go to state 38
    TK_PR_WHILE       shift, and go to state 39
    TK_PR_DO          shift, and go to state 40
    TK_PR_RETURN      shift, and go to state 41
    TK_PR_CONST       shift, and go to state 42
    TK_PR_STATIC      shift, and go to state 43
    TK_PR_FOREACH     shift, and go to state 44
    TK_PR_SWITCH      shift, and go to state 45
    TK_PR_CASE        shift, and go to state 46
    TK_PR_BREAK       shift, and go to state 47
    TK_PR_CONTINUE    shift, and go to state 48
    TK_IDENTIFICADOR  shift, and go to state 49
    '{'               shift, and go to state 29

    '}'       reduce using rule 64 (command_list)
    '}'       [reduce using rule 65 (command_list)]
    $default  reduce using rule 64 (command_list)

    storage_specifier_static_const  go to state 50
    command_block                   go to state 51
    command_list                    go to state 105
    command                         go to state 53
    declare_local_var               go to state 54
    assignment                      go to state 55
    function_invocation             go to state 56
    shift                           go to state 57
    control_flow                    go to state 58
    if_then                         go to state 59
    if_then_else                    go to state 60
    switch                          go to state 61
    while                           go to state 62
    do_while                        go to state 63
    for_each                        go to state 64
    return                          go to state 65


state 54

   67 command: declare_local_var . ';'

    ';'  shift, and go to state 106


state 55

   68 command: assignment . ';'

    ';'  shift, and go to state 107


state 56

   70 command: function_invocation . ';'

    ';'  shift, and go to state 108


state 57

   71 command: shift . ';'

    ';'  shift, and go to state 109


state 58

   69 command: control_flow . ';'

    ';'  shift, and go to state 110


state 59

   88 control_flow: if_then .
   95 if_then_else: if_then . TK_PR_ELSE command_block

    TK_PR_ELSE  shift, and go to state 111

    $default  reduce using rule 88 (control_flow)


state 60

   89 control_flow: if_then_else .

    $default  reduce using rule 89 (control_flow)


state 61

   90 control_flow: switch .

    $default  reduce using rule 90 (control_flow)


state 62

   91 control_flow: while .

    $default  reduce using rule 91 (control_flow)


state 63

   92 control_flow: do_while .

    $default  reduce using rule 92 (control_flow)


state 64

   93 control_flow: for_each .

    $default  reduce using rule 93 (control_flow)


state 65

   72 command: return .

    $default  reduce using rule 72 (command)


state 66

    8 declare_array: var_type TK_IDENTIFICADOR '[' . TK_LIT_INT ']'

    TK_LIT_INT  shift, and go to state 112


state 67

   57 function_header: storage_specifier_static var_type TK_IDENTIFICADOR '(' . parameter_list ')'

    TK_PR_CONST  shift, and go to state 113

    ')'       reduce using rule 60 (parameter_list)
    $default  reduce using rule 18 (storage_specifier_const)

    storage_specifier_const  go to state 114
    parameter_list           go to state 115
    parameter                go to state 116


state 68

   54 class_property: access_modifier var_type TK_IDENTIFICADOR .
   55               | access_modifier var_type TK_IDENTIFICADOR . '[' TK_LIT_INT ']'

    '['  shift, and go to state 117

    $default  reduce using rule 54 (class_property)


state 69

   51 class_tail: '}' ';' .

    $default  reduce using rule 51 (class_tail)


state 70

   52 class_body: class_property ':' class_body .

    $default  reduce using rule 52 (class_body)


state 71

   94 if_then: TK_PR_IF '(' . expression ')' TK_PR_THEN command_block

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 118


state 72

   97 while: TK_PR_WHILE '(' . expression ')' TK_PR_DO command_block

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 119


state 73

   98 do_while: TK_PR_DO command_block . TK_PR_WHILE '(' expression ')'

    TK_PR_WHILE  shift, and go to state 120


state 74

   29 primitive_literals: TK_LIT_INT .

    $default  reduce using rule 29 (primitive_literals)


state 75

   30 primitive_literals: TK_LIT_FLOAT .

    $default  reduce using rule 30 (primitive_literals)


state 76

   31 primitive_literals: TK_LIT_FALSE .

    $default  reduce using rule 31 (primitive_literals)


state 77

   32 primitive_literals: TK_LIT_TRUE .

    $default  reduce using rule 32 (primitive_literals)


state 78

   33 primitive_literals: TK_LIT_CHAR .

    $default  reduce using rule 33 (primitive_literals)


state 79

   34 primitive_literals: TK_LIT_STRING .

    $default  reduce using rule 34 (primitive_literals)


state 80

   80 function_invocation: TK_IDENTIFICADOR . '(' argument_list ')'
  102 expression: TK_IDENTIFICADOR .
  103           | TK_IDENTIFICADOR . '[' expression ']'

    '['  shift, and go to state 121
    '('  shift, and go to state 94

    $default  reduce using rule 102 (expression)


state 81

  107 expression: '(' . expression ')'

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 122


state 82

  104 expression: primitive_literals .

    $default  reduce using rule 104 (expression)


state 83

  105 expression: function_invocation .

    $default  reduce using rule 105 (expression)


state 84

  106 expression: expression . logic_arithmetic_operators expression
  108 return: TK_PR_RETURN expression . ';'

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    ';'        shift, and go to state 129
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 85

   14 storage_specifier_static_const: TK_PR_STATIC TK_PR_CONST .

    $default  reduce using rule 14 (storage_specifier_static_const)


state 86

   99 for_each: TK_PR_FOREACH '(' . TK_IDENTIFICADOR ':' expression_list ')' command_block

    TK_IDENTIFICADOR  shift, and go to state 139


state 87

   96 switch: TK_PR_SWITCH '(' . expression ')' command_block

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 140


state 88

  109 return: TK_PR_CASE TK_LIT_INT . ':'

    ':'  shift, and go to state 141


state 89

  110 return: TK_PR_BREAK ';' .

    $default  reduce using rule 110 (return)


state 90

  111 return: TK_PR_CONTINUE ';' .

    $default  reduce using rule 111 (return)


state 91

   86 shift: TK_IDENTIFICADOR TK_OC_SL . TK_LIT_INT

    TK_LIT_INT  shift, and go to state 142


state 92

   87 shift: TK_IDENTIFICADOR TK_OC_SR . TK_LIT_INT

    TK_LIT_INT  shift, and go to state 143


state 93

   78 assignment: TK_IDENTIFICADOR '[' . expression ']' '=' expression

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 144


state 94

   80 function_invocation: TK_IDENTIFICADOR '(' . argument_list ')'

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    $default  reduce using rule 83 (argument_list)

    primitive_literals   go to state 145
    function_invocation  go to state 83
    argument_list        go to state 146
    argument             go to state 147
    expression           go to state 148


state 95

   77 assignment: TK_IDENTIFICADOR '=' . expression

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 149


state 96

   79 assignment: TK_IDENTIFICADOR '$' . TK_IDENTIFICADOR '=' expression

    TK_IDENTIFICADOR  shift, and go to state 150


state 97

   19 var_type: TK_PR_INT .
   24 primitive_types: TK_PR_INT .

    TK_IDENTIFICADOR  reduce using rule 19 (var_type)
    TK_IDENTIFICADOR  [reduce using rule 24 (primitive_types)]
    $default          reduce using rule 19 (var_type)


state 98

   20 var_type: TK_PR_FLOAT .
   25 primitive_types: TK_PR_FLOAT .

    TK_IDENTIFICADOR  reduce using rule 20 (var_type)
    TK_IDENTIFICADOR  [reduce using rule 25 (primitive_types)]
    $default          reduce using rule 20 (var_type)


state 99

   21 var_type: TK_PR_BOOL .
   26 primitive_types: TK_PR_BOOL .

    TK_IDENTIFICADOR  reduce using rule 21 (var_type)
    TK_IDENTIFICADOR  [reduce using rule 26 (primitive_types)]
    $default          reduce using rule 21 (var_type)


state 100

   22 var_type: TK_PR_CHAR .
   27 primitive_types: TK_PR_CHAR .

    TK_IDENTIFICADOR  reduce using rule 22 (var_type)
    TK_IDENTIFICADOR  [reduce using rule 27 (primitive_types)]
    $default          reduce using rule 22 (var_type)


state 101

   23 var_type: TK_PR_STRING .
   28 primitive_types: TK_PR_STRING .

    TK_IDENTIFICADOR  reduce using rule 23 (var_type)
    TK_IDENTIFICADOR  [reduce using rule 28 (primitive_types)]
    $default          reduce using rule 23 (var_type)


state 102

   73 declare_local_var: storage_specifier_static_const var_type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 151


state 103

   74 declare_local_var: storage_specifier_static_const primitive_types . TK_IDENTIFICADOR
   75                  | storage_specifier_static_const primitive_types . TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR
   76                  | storage_specifier_static_const primitive_types . TK_IDENTIFICADOR TK_OC_LE primitive_literals

    TK_IDENTIFICADOR  shift, and go to state 152


state 104

   62 command_block: '{' command_list '}' .

    $default  reduce using rule 62 (command_block)


state 105

   63 command_list: command command_list .

    $default  reduce using rule 63 (command_list)


state 106

   67 command: declare_local_var ';' .

    $default  reduce using rule 67 (command)


state 107

   68 command: assignment ';' .

    $default  reduce using rule 68 (command)


state 108

   70 command: function_invocation ';' .

    $default  reduce using rule 70 (command)


state 109

   71 command: shift ';' .

    $default  reduce using rule 71 (command)


state 110

   69 command: control_flow ';' .

    $default  reduce using rule 69 (command)


state 111

   95 if_then_else: if_then TK_PR_ELSE . command_block

    '{'  shift, and go to state 29

    command_block  go to state 153


state 112

    8 declare_array: var_type TK_IDENTIFICADOR '[' TK_LIT_INT . ']'

    ']'  shift, and go to state 154


state 113

   17 storage_specifier_const: TK_PR_CONST .

    $default  reduce using rule 17 (storage_specifier_const)


state 114

   61 parameter: storage_specifier_const . var_type TK_IDENTIFICADOR

    TK_PR_INT     shift, and go to state 13
    TK_PR_FLOAT   shift, and go to state 14
    TK_PR_BOOL    shift, and go to state 15
    TK_PR_CHAR    shift, and go to state 16
    TK_PR_STRING  shift, and go to state 17

    var_type  go to state 155


state 115

   57 function_header: storage_specifier_static var_type TK_IDENTIFICADOR '(' parameter_list . ')'

    ')'  shift, and go to state 156


state 116

   58 parameter_list: parameter . ',' parameter_list
   59               | parameter .

    ','  shift, and go to state 157

    $default  reduce using rule 59 (parameter_list)


state 117

   55 class_property: access_modifier var_type TK_IDENTIFICADOR '[' . TK_LIT_INT ']'

    TK_LIT_INT  shift, and go to state 158


state 118

   94 if_then: TK_PR_IF '(' expression . ')' TK_PR_THEN command_block
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ')'        shift, and go to state 159

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 119

   97 while: TK_PR_WHILE '(' expression . ')' TK_PR_DO command_block
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ')'        shift, and go to state 160

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 120

   98 do_while: TK_PR_DO command_block TK_PR_WHILE . '(' expression ')'

    '('  shift, and go to state 161


state 121

  103 expression: TK_IDENTIFICADOR '[' . expression ']'

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 162


state 122

  106 expression: expression . logic_arithmetic_operators expression
  107           | '(' expression . ')'

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ')'        shift, and go to state 163

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 123

   39 logic_operators: TK_OC_LE .

    $default  reduce using rule 39 (logic_operators)


state 124

   40 logic_operators: TK_OC_GE .

    $default  reduce using rule 40 (logic_operators)


state 125

   41 logic_operators: TK_OC_EQ .

    $default  reduce using rule 41 (logic_operators)


state 126

   42 logic_operators: TK_OC_NE .

    $default  reduce using rule 42 (logic_operators)


state 127

   43 logic_operators: TK_OC_AND .

    $default  reduce using rule 43 (logic_operators)


state 128

   44 logic_operators: TK_OC_OR .

    $default  reduce using rule 44 (logic_operators)


state 129

  108 return: TK_PR_RETURN expression ';' .

    $default  reduce using rule 108 (return)


state 130

   37 logic_operators: '<' .

    $default  reduce using rule 37 (logic_operators)


state 131

   38 logic_operators: '>' .

    $default  reduce using rule 38 (logic_operators)


state 132

   45 arithmetic_operators: '+' .

    $default  reduce using rule 45 (arithmetic_operators)


state 133

   46 arithmetic_operators: '-' .

    $default  reduce using rule 46 (arithmetic_operators)


state 134

   47 arithmetic_operators: '/' .

    $default  reduce using rule 47 (arithmetic_operators)


state 135

   48 arithmetic_operators: '*' .

    $default  reduce using rule 48 (arithmetic_operators)


state 136

  106 expression: expression logic_arithmetic_operators . expression

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 164


state 137

   35 logic_arithmetic_operators: logic_operators .

    $default  reduce using rule 35 (logic_arithmetic_operators)


state 138

   36 logic_arithmetic_operators: arithmetic_operators .

    $default  reduce using rule 36 (logic_arithmetic_operators)


state 139

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR . ':' expression_list ')' command_block

    ':'  shift, and go to state 165


state 140

   96 switch: TK_PR_SWITCH '(' expression . ')' command_block
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ')'        shift, and go to state 166

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 141

  109 return: TK_PR_CASE TK_LIT_INT ':' .

    $default  reduce using rule 109 (return)


state 142

   86 shift: TK_IDENTIFICADOR TK_OC_SL TK_LIT_INT .

    $default  reduce using rule 86 (shift)


state 143

   87 shift: TK_IDENTIFICADOR TK_OC_SR TK_LIT_INT .

    $default  reduce using rule 87 (shift)


state 144

   78 assignment: TK_IDENTIFICADOR '[' expression . ']' '=' expression
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    ']'        shift, and go to state 167
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 145

   85 argument: primitive_literals .
  104 expression: primitive_literals .

    ')'       reduce using rule 85 (argument)
    ')'       [reduce using rule 104 (expression)]
    ','       reduce using rule 85 (argument)
    ','       [reduce using rule 104 (expression)]
    $default  reduce using rule 104 (expression)


state 146

   80 function_invocation: TK_IDENTIFICADOR '(' argument_list . ')'

    ')'  shift, and go to state 168


state 147

   81 argument_list: argument . ',' argument_list
   82              | argument .

    ','  shift, and go to state 169

    $default  reduce using rule 82 (argument_list)


state 148

   84 argument: expression .
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    $default  reduce using rule 84 (argument)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 149

   77 assignment: TK_IDENTIFICADOR '=' expression .
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    $default  reduce using rule 77 (assignment)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 150

   79 assignment: TK_IDENTIFICADOR '$' TK_IDENTIFICADOR . '=' expression

    '='  shift, and go to state 170


state 151

   73 declare_local_var: storage_specifier_static_const var_type TK_IDENTIFICADOR .

    $default  reduce using rule 73 (declare_local_var)


state 152

   74 declare_local_var: storage_specifier_static_const primitive_types TK_IDENTIFICADOR .
   75                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR . TK_OC_LE TK_IDENTIFICADOR
   76                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR . TK_OC_LE primitive_literals

    TK_OC_LE  shift, and go to state 171

    $default  reduce using rule 74 (declare_local_var)


state 153

   95 if_then_else: if_then TK_PR_ELSE command_block .

    $default  reduce using rule 95 (if_then_else)


state 154

    8 declare_array: var_type TK_IDENTIFICADOR '[' TK_LIT_INT ']' .

    $default  reduce using rule 8 (declare_array)


state 155

   61 parameter: storage_specifier_const var_type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 172


state 156

   57 function_header: storage_specifier_static var_type TK_IDENTIFICADOR '(' parameter_list ')' .

    $default  reduce using rule 57 (function_header)


state 157

   58 parameter_list: parameter ',' . parameter_list

    TK_PR_CONST  shift, and go to state 113

    ')'       reduce using rule 60 (parameter_list)
    $default  reduce using rule 18 (storage_specifier_const)

    storage_specifier_const  go to state 114
    parameter_list           go to state 173
    parameter                go to state 116


state 158

   55 class_property: access_modifier var_type TK_IDENTIFICADOR '[' TK_LIT_INT . ']'

    ']'  shift, and go to state 174


state 159

   94 if_then: TK_PR_IF '(' expression ')' . TK_PR_THEN command_block

    TK_PR_THEN  shift, and go to state 175


state 160

   97 while: TK_PR_WHILE '(' expression ')' . TK_PR_DO command_block

    TK_PR_DO  shift, and go to state 176


state 161

   98 do_while: TK_PR_DO command_block TK_PR_WHILE '(' . expression ')'

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 177


state 162

  103 expression: TK_IDENTIFICADOR '[' expression . ']'
  106           | expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    ']'        shift, and go to state 178
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 163

  107 expression: '(' expression ')' .

    $default  reduce using rule 107 (expression)


state 164

  106 expression: expression . logic_arithmetic_operators expression
  106           | expression logic_arithmetic_operators expression .

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    TK_OC_LE   [reduce using rule 106 (expression)]
    TK_OC_GE   [reduce using rule 106 (expression)]
    TK_OC_EQ   [reduce using rule 106 (expression)]
    TK_OC_NE   [reduce using rule 106 (expression)]
    TK_OC_AND  [reduce using rule 106 (expression)]
    TK_OC_OR   [reduce using rule 106 (expression)]
    '<'        [reduce using rule 106 (expression)]
    '>'        [reduce using rule 106 (expression)]
    '+'        [reduce using rule 106 (expression)]
    '-'        [reduce using rule 106 (expression)]
    '/'        [reduce using rule 106 (expression)]
    '*'        [reduce using rule 106 (expression)]
    $default   reduce using rule 106 (expression)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 165

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' . expression_list ')' command_block

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression_list      go to state 179
    expression           go to state 180


state 166

   96 switch: TK_PR_SWITCH '(' expression ')' . command_block

    '{'  shift, and go to state 29

    command_block  go to state 181


state 167

   78 assignment: TK_IDENTIFICADOR '[' expression ']' . '=' expression

    '='  shift, and go to state 182


state 168

   80 function_invocation: TK_IDENTIFICADOR '(' argument_list ')' .

    $default  reduce using rule 80 (function_invocation)


state 169

   81 argument_list: argument ',' . argument_list

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    $default  reduce using rule 83 (argument_list)

    primitive_literals   go to state 145
    function_invocation  go to state 83
    argument_list        go to state 183
    argument             go to state 147
    expression           go to state 148


state 170

   79 assignment: TK_IDENTIFICADOR '$' TK_IDENTIFICADOR '=' . expression

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 184


state 171

   75 declare_local_var: storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE . TK_IDENTIFICADOR
   76                  | storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE . primitive_literals

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 185

    primitive_literals  go to state 186


state 172

   61 parameter: storage_specifier_const var_type TK_IDENTIFICADOR .

    $default  reduce using rule 61 (parameter)


state 173

   58 parameter_list: parameter ',' parameter_list .

    $default  reduce using rule 58 (parameter_list)


state 174

   55 class_property: access_modifier var_type TK_IDENTIFICADOR '[' TK_LIT_INT ']' .

    $default  reduce using rule 55 (class_property)


state 175

   94 if_then: TK_PR_IF '(' expression ')' TK_PR_THEN . command_block

    '{'  shift, and go to state 29

    command_block  go to state 187


state 176

   97 while: TK_PR_WHILE '(' expression ')' TK_PR_DO . command_block

    '{'  shift, and go to state 29

    command_block  go to state 188


state 177

   98 do_while: TK_PR_DO command_block TK_PR_WHILE '(' expression . ')'
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ')'        shift, and go to state 189

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 178

  103 expression: TK_IDENTIFICADOR '[' expression ']' .

    $default  reduce using rule 103 (expression)


state 179

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' expression_list . ')' command_block

    ')'  shift, and go to state 190


state 180

  100 expression_list: expression . ',' expression_list
  101                | expression .
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135
    ','        shift, and go to state 191

    $default  reduce using rule 101 (expression_list)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 181

   96 switch: TK_PR_SWITCH '(' expression ')' command_block .

    $default  reduce using rule 96 (switch)


state 182

   78 assignment: TK_IDENTIFICADOR '[' expression ']' '=' . expression

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression           go to state 192


state 183

   81 argument_list: argument ',' argument_list .

    $default  reduce using rule 81 (argument_list)


state 184

   79 assignment: TK_IDENTIFICADOR '$' TK_IDENTIFICADOR '=' expression .
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    $default  reduce using rule 79 (assignment)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 185

   75 declare_local_var: storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR .

    $default  reduce using rule 75 (declare_local_var)


state 186

   76 declare_local_var: storage_specifier_static_const primitive_types TK_IDENTIFICADOR TK_OC_LE primitive_literals .

    $default  reduce using rule 76 (declare_local_var)


state 187

   94 if_then: TK_PR_IF '(' expression ')' TK_PR_THEN command_block .

    $default  reduce using rule 94 (if_then)


state 188

   97 while: TK_PR_WHILE '(' expression ')' TK_PR_DO command_block .

    $default  reduce using rule 97 (while)


state 189

   98 do_while: TK_PR_DO command_block TK_PR_WHILE '(' expression ')' .

    $default  reduce using rule 98 (do_while)


state 190

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' expression_list ')' . command_block

    '{'  shift, and go to state 29

    command_block  go to state 193


state 191

  100 expression_list: expression ',' . expression_list

    TK_LIT_INT        shift, and go to state 74
    TK_LIT_FLOAT      shift, and go to state 75
    TK_LIT_FALSE      shift, and go to state 76
    TK_LIT_TRUE       shift, and go to state 77
    TK_LIT_CHAR       shift, and go to state 78
    TK_LIT_STRING     shift, and go to state 79
    TK_IDENTIFICADOR  shift, and go to state 80
    '('               shift, and go to state 81

    primitive_literals   go to state 82
    function_invocation  go to state 83
    expression_list      go to state 194
    expression           go to state 180


state 192

   78 assignment: TK_IDENTIFICADOR '[' expression ']' '=' expression .
  106 expression: expression . logic_arithmetic_operators expression

    TK_OC_LE   shift, and go to state 123
    TK_OC_GE   shift, and go to state 124
    TK_OC_EQ   shift, and go to state 125
    TK_OC_NE   shift, and go to state 126
    TK_OC_AND  shift, and go to state 127
    TK_OC_OR   shift, and go to state 128
    '<'        shift, and go to state 130
    '>'        shift, and go to state 131
    '+'        shift, and go to state 132
    '-'        shift, and go to state 133
    '/'        shift, and go to state 134
    '*'        shift, and go to state 135

    $default  reduce using rule 78 (assignment)

    logic_arithmetic_operators  go to state 136
    logic_operators             go to state 137
    arithmetic_operators        go to state 138


state 193

   99 for_each: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' expression_list ')' command_block .

    $default  reduce using rule 99 (for_each)


state 194

  100 expression_list: expression ',' expression_list .

    $default  reduce using rule 100 (expression_list)
